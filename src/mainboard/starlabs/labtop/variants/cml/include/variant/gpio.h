/* SPDX-License-Identifier: GPL-2.0-only */

#ifndef _VARIANT_GPIO_H_
#define _VARIANT_GPIO_H_

#include "baseboard/variants.h"

#ifndef __ACPI__

/*
 * All definitions are taken from a comparison of the output of "inteltool -a"
 * using the stock BIOS and with coreboot.
 */

/* Early pad configuration in romstage.c */
const struct pad_config early_gpio_table[] = {
	PAD_CFG_GPO(GPP_E22, 1, PLTRST),
	PAD_CFG_GPO(GPP_E23, 1, PLTRST),
	PAD_CFG_GPI(GPP_H6, NONE, PLTRST),
	PAD_CFG_GPI(GPP_H7, NONE, PLTRST),
};

const struct pad_config *variant_early_gpio_table(size_t *num)
{
	*num = ARRAY_SIZE(early_gpio_table);
	return early_gpio_table;
}

/* Pad configuration in ramstage.c */
const struct pad_config gpio_table[] = {
	PAD_CFG_NF(GPD0, NONE, PWROK, NF1),
	PAD_CFG_NF(GPD1, NATIVE, PWROK, NF1),
	PAD_CFG_NF(GPD2, NATIVE, PWROK, NF1),
	PAD_CFG_NF(GPD3, UP_20K, PWROK, NF1),
	PAD_CFG_NF(GPD4, NONE, PWROK, NF1),
	PAD_CFG_NF(GPD5, NONE, PWROK, NF1),
	PAD_CFG_NF(GPD6, NONE, PWROK, NF1),
	PAD_CFG_GPO(GPD7, 0, PWROK),
	PAD_CFG_NF(GPD8, NONE, PWROK, NF1),
	PAD_CFG_NF(GPD9, NONE, PWROK, NF1),
	PAD_CFG_NF(GPD10, NONE, PWROK, NF1),
	PAD_CFG_NF(GPD11, NONE, PWROK, NF1),
	PAD_CFG_NF(GPP_A0, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_A1, NATIVE, DEEP, NF1),
	PAD_CFG_NF(GPP_A2, NATIVE, DEEP, NF1),
	PAD_CFG_NF(GPP_A3, NATIVE, DEEP, NF1),
	PAD_CFG_NF(GPP_A4, NATIVE, DEEP, NF1),
	PAD_CFG_NF(GPP_A5, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_A6, NONE, DEEP, NF1),
	_PAD_CFG_STRUCT(GPP_A7, 0x40100100, 0x3000),
	PAD_CFG_NF(GPP_A8, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_A9, DN_20K, DEEP, NF1),
	PAD_CFG_NF(GPP_A10, DN_20K, DEEP, NF1),
	PAD_CFG_NF(GPP_A11, UP_20K, DEEP, NF1),
	PAD_NC(GPP_A12, NONE),
	PAD_CFG_GPO(GPP_A13, 1, PLTRST),
	PAD_CFG_NF(GPP_A14, NONE, DEEP, NF1),
	PAD_CFG_GPO(GPP_A15, 1, PLTRST),
	PAD_CFG_TERM_GPO(GPP_A16, 1, UP_20K, PLTRST),
	PAD_NC(GPP_A17, NONE),
	PAD_NC(GPP_A18, UP_20K),
	PAD_NC(GPP_A19, UP_20K),
	PAD_NC(GPP_A20, UP_20K),
	PAD_NC(GPP_A21, UP_20K),
	PAD_NC(GPP_A22, UP_20K),
	PAD_NC(GPP_A23, UP_20K),
	PAD_CFG_NF(GPP_B0, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_B1, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_B2, NONE, DEEP, NF1),
	_PAD_CFG_STRUCT(GPP_B3, 0x80100100, 0x0000),
	PAD_CFG_GPO(GPP_B4, 1, DEEP),
	PAD_CFG_NF(GPP_B5, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_B6, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_B7, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_B8, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_B9, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_B10, NONE, DEEP, NF1),
	PAD_CFG_GPO(GPP_B11, 1, PLTRST),
	PAD_CFG_NF(GPP_B12, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_B13, NONE, DEEP, NF1),
	PAD_CFG_GPO(GPP_B14, 1, PLTRST),
	PAD_CFG_TERM_GPO(GPP_B15, 1, UP_20K, PLTRST),
	_PAD_CFG_STRUCT(GPP_B16, 0x80100100, 0x0000),
	PAD_CFG_GPO(GPP_B17, 1, PLTRST),
	PAD_CFG_GPO(GPP_B18, 0, DEEP),
	PAD_NC(GPP_B19, NONE),
	PAD_NC(GPP_B20, NONE),
	PAD_NC(GPP_B21, NONE),
	PAD_CFG_GPO(GPP_B22, 0, DEEP),
	PAD_CFG_GPO(GPP_B23, 1, DEEP),
	PAD_CFG_NF(GPP_C0, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_C1, NONE, DEEP, NF1),
	PAD_CFG_GPO(GPP_C2, 1, DEEP),
	PAD_CFG_NF(GPP_C3, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_C4, NONE, DEEP, NF1),
	_PAD_CFG_STRUCT(GPP_C5, 0x40880100, 0x0000),
	PAD_NC(GPP_C6, NONE),
	PAD_NC(GPP_C7, NONE),
	_PAD_CFG_STRUCT(GPP_C8, 0x80100100, 0x3000),
	_PAD_CFG_STRUCT(GPP_C9, 0x82880100, 0x3000),
	PAD_CFG_GPO(GPP_C10, 0, PLTRST),
	_PAD_CFG_STRUCT(GPP_C11, 0x40100100, 0x0000),
	PAD_CFG_GPO(GPP_C12, 1, PLTRST),
	PAD_NC(GPP_C13, NONE),
	PAD_NC(GPP_C14, NONE),
	PAD_CFG_GPO(GPP_C15, 1, PLTRST),
	PAD_CFG_NF(GPP_C16, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_C17, NONE, DEEP, NF1),
	PAD_NC(GPP_C18, NONE),
	PAD_NC(GPP_C19, NONE),
	PAD_NC(GPP_C20, NONE),
	PAD_NC(GPP_C21, NONE),
	PAD_NC(GPP_C22, NONE),
	PAD_NC(GPP_C23, NONE),
	PAD_NC(GPP_D0, NONE),
	PAD_NC(GPP_D1, NONE),
	PAD_NC(GPP_D2, NONE),
	PAD_NC(GPP_D3, NONE),
	PAD_NC(GPP_D4, NONE),
	PAD_CFG_NF(GPP_D5, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_D6, NONE, DEEP, NF1),
	PAD_NC(GPP_D7, NONE),
	PAD_NC(GPP_D8, NONE),
	PAD_CFG_GPO(GPP_D9, 1, PLTRST),
	_PAD_CFG_STRUCT(GPP_D10, 0x80100100, 0x0000),
	_PAD_CFG_STRUCT(GPP_D11, 0x40880100, 0x3000),
	PAD_CFG_GPO(GPP_D12, 0, DEEP),
	PAD_NC(GPP_D13, NONE),
	PAD_CFG_GPO(GPP_D14, 1, PLTRST),
	PAD_CFG_GPO(GPP_D15, 1, PLTRST),
	PAD_CFG_GPO(GPP_D16, 0, PWROK),
	PAD_CFG_NF(GPP_D17, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_D18, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_D19, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_D20, NONE, DEEP, NF1),
	PAD_NC(GPP_D21, NONE),
	PAD_NC(GPP_D22, NONE),
	PAD_NC(GPP_D23, NONE),
	PAD_NC(GPP_E0, NONE),
	PAD_CFG_NF(GPP_E1, UP_20K, DEEP, NF1),
	PAD_CFG_GPI(GPP_E2, UP_20K, PLTRST),
	_PAD_CFG_STRUCT(GPP_E3, 0x82040100, 0x0000),
	_PAD_CFG_STRUCT(GPP_E4, 0x80880100, 0x3000),
	PAD_NC(GPP_E5, NONE),
	PAD_NC(GPP_E6, NONE),
	PAD_CFG_GPI(GPP_E7, NONE, PLTRST),
	PAD_NC(GPP_E8, NONE),
	_PAD_CFG_STRUCT(GPP_E9, 0x44001700, 0x0000),
	_PAD_CFG_STRUCT(GPP_E10, 0x44001700, 0x0000),
	PAD_CFG_NF(GPP_E11, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_E12, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_E13, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_E14, NONE, DEEP, NF1),
	PAD_CFG_GPO(GPP_E15, 1, PLTRST),
	_PAD_CFG_STRUCT(GPP_E16, 0x80880100, 0x3000),
	PAD_CFG_NF(GPP_E17, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_E18, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_E19, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_E20, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_E21, NONE, DEEP, NF1),
	_PAD_CFG_STRUCT(GPP_F0, 0x00000301, 0x0000),
	PAD_CFG_GPO(GPP_F1, 0, PWROK),
	PAD_CFG_TERM_GPO(GPP_F2, 1, UP_20K, PLTRST),
	_PAD_CFG_STRUCT(GPP_F3, 0x84000300, 0x3000),
	PAD_CFG_NF(GPP_F4, UP_20K, DEEP, NF1),
	PAD_CFG_NF(GPP_F5, UP_20K, DEEP, NF1),
	PAD_CFG_NF(GPP_F6, UP_20K, DEEP, NF1),
	PAD_CFG_NF(GPP_F7, UP_20K, DEEP, NF1),
	PAD_NC(GPP_F8, NONE),
	PAD_NC(GPP_F9, NONE),
	PAD_CFG_GPI(GPP_F10, UP_20K, PLTRST),
	PAD_CFG_NF(GPP_F11, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_F12, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_F13, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_F14, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_F15, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_F16, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_F17, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_F18, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_F19, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_F20, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_F21, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_F22, NONE, DEEP, NF1),
	PAD_CFG_NF(GPP_F23, DN_20K, DEEP, NF1),
	PAD_NC(GPP_G0, NONE),
	PAD_NC(GPP_G1, NONE),
	PAD_NC(GPP_G2, NONE),
	PAD_NC(GPP_G3, NONE),
	PAD_NC(GPP_G4, NONE),
	PAD_NC(GPP_G5, UP_20K),
	PAD_NC(GPP_G6, NONE),
	PAD_NC(GPP_G7, DN_20K),
	PAD_NC(GPP_H0, UP_20K),
	PAD_CFG_NF(GPP_H1, UP_20K, DEEP, NF3),
	PAD_CFG_NF(GPP_H2, UP_20K, DEEP, NF3),
	PAD_NC(GPP_H3, UP_20K),
	PAD_NC(GPP_H4, NONE),
	PAD_NC(GPP_H5, NONE),
	PAD_NC(GPP_H8, NONE),
	PAD_NC(GPP_H9, NONE),
	PAD_CFG_GPO(GPP_H10, 1, PLTRST),
	PAD_CFG_GPO(GPP_H11, 1, PLTRST),
	PAD_CFG_GPO(GPP_H12, 1, PLTRST),
	PAD_CFG_GPO(GPP_H13, 1, PLTRST),
	PAD_CFG_GPO(GPP_H14, 1, PLTRST),
	PAD_CFG_GPO(GPP_H15, 1, PLTRST),
	PAD_NC(GPP_H16, NONE),
	PAD_CFG_GPO(GPP_H17, 0, DEEP),
	PAD_CFG_NF(GPP_H18, NONE, DEEP, NF1),
	PAD_CFG_GPO(GPP_H19, 1, PLTRST),
	_PAD_CFG_STRUCT(GPP_H20, 0x84000300, 0x0000),
	PAD_CFG_GPO(GPP_H21, 0, DEEP),
	PAD_CFG_GPO(GPP_H22, 1, PLTRST),
	PAD_CFG_GPO(GPP_H23, 0, DEEP),
};

const struct pad_config *variant_gpio_table(size_t *num)
{
	*num = ARRAY_SIZE(gpio_table);
	return gpio_table;
}

#endif

#endif
